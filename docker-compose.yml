version: "3.8"

services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3307:3306"
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u${DB_USER}",
          "-p${DB_PASSWORD}",
        ]
      timeout: 20s
      retries: 10
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    command: /app/entrypoint.sh
    volumes:
      - static_volume:/app/static/static-only
      - media_volume:/app/media
      - logs_volume:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/admin/"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Nginx para servir archivos est√°ticos (opcional)
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/static:ro
      - media_volume:/app/media:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    networks:
      - app-network
    profiles:
      - with-nginx

volumes:
  mysql_data:
  static_volume:
  media_volume:
  logs_volume:

networks:
  app-network:
    driver: bridge
