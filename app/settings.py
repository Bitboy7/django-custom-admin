"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

from import_export.formats.base_formats import *
from dotenv import load_dotenv
import os
from django.templatetags.static import static
from django.urls import reverse_lazy

load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False").lower() in ["true", "1", "yes"]

ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")

# Configuración de seguridad para producción
if not DEBUG:
    SECURE_BROWSER_XSS_FILTER = True
    SECURE_CONTENT_TYPE_NOSNIFF = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_SECONDS = 31536000
    SECURE_HSTS_PRELOAD = os.getenv("SECURE_HSTS_PRELOAD", "TRUE").lower() in ["true", "1"]
    SECURE_SSL_REDIRECT = os.getenv("SECURE_SSL_REDIRECT", "False").lower() in ["true", "1"]
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SESSION_COOKIE_SECURE = os.getenv("SESSION_COOKIE_SECURE", "False").lower() in ["true", "1"]
    CSRF_COOKIE_SECURE = os.getenv("CSRF_COOKIE_SECURE", "False").lower() in ["true", "1"]
    X_FRAME_OPTIONS = 'DENY'

CSRF_TRUSTED_ORIGINS = os.getenv("CSRF_TRUSTED_ORIGINS", "http://localhost:8000").split(",")

# Application definition

INSTALLED_APPS = [
    "unfold",
    "unfold.contrib.import_export",  # Soporte para django-import-export con Unfold
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.humanize',
    'compressor',
    'djmoney',  # Django Money para manejo de monedas
    'app',  # Agregamos la app principal para los comandos de gestión
    'auditoria',  # Sistema de registro de actividad
    'catalogo.apps.CatalogoConfig',
    'gastos.apps.GastosConfig',
    'ventas.apps.VentasConfig',
    'import_export',
]

# Configuración completa para Django Unfold
UNFOLD = {
    "SITE_TITLE": "Agricola de la Costa San Luis - Sistema de administración",
    "SITE_HEADER": "Agricola de la Costa San Luis",
    "SITE_SUBHEADER": "Sistema de gestión Integral",
    "SITE_URL": "/admin/",
    "SITE_ICON": lambda request: static("img/icon.png"),
    "SITE_LOGO": lambda request: static("img/logo-sm.png"),
    "SITE_FAVICONS": [
        {
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/png",
            "href": lambda request: static("img/icon.png"),
        },
    ],
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "SHOW_BACK_BUTTON": True,
    # "SHOW_LANGUAGES": True,  # Habilitar selector de idiomas - Temporalmente deshabilitado
    "ENVIRONMENT": "app.environment_callback",
    "DASHBOARD_CALLBACK": "app.views.dashboard_callback",
    "THEME": None,  # Permite cambio de tema
    "LOGIN": {
        "image": lambda request: static("img/login-bg.png") if static("img/login-bg.png") else None,
    },
    # Configuración personalizada de idiomas - Temporalmente deshabilitado
    # "LANGUAGES": {
    #     "navigation": [
    #         {
    #             'bidi': False,
    #             'code': 'es',
    #             'name': 'Spanish',
    #             'name_local': 'Español',
    #             'name_translated': 'Español'
    #         },
    #         {
    #             'bidi': False,
    #             'code': 'en',
    #             'name': 'English',
    #             'name_local': 'English',
    #             'name_translated': 'Inglés'
    #         },
    #         {
    #             'bidi': False,
    #             'code': 'fr',
    #             'name': 'French',
    #             'name_local': 'Français',
    #             'name_translated': 'Francés'
    #         },
    #         {
    #             'bidi': False,
    #             'code': 'de',
    #             'name': 'German',
    #             'name_local': 'Deutsch',
    #             'name_translated': 'Alemán'
    #         },
    #         {
    #             'bidi': False,
    #             'code': 'pt',
    #             'name': 'Portuguese',
    #             'name_local': 'Português',
    #             'name_translated': 'Portugués'
    #         },
    #     ],
    # },
    "COLORS": {
        "base": {
            "50": "248, 250, 252",   # Gris muy claro
            "100": "241, 245, 249",  # Gris claro
            "200": "226, 232, 240",  # Gris suave
            "300": "203, 213, 225",  # Gris medio claro
            "400": "148, 163, 184",  # Gris medio
            "500": "100, 116, 139",  # Gris equilibrado
            "600": "71, 85, 105",    # Gris oscuro medio
            "700": "51, 65, 85",     # Gris oscuro
            "800": "30, 41, 59",     # Gris muy oscuro
            "900": "15, 23, 42",     # Casi negro azulado
            "950": "2, 6, 23",       # Negro azulado profundo
        },
        "primary": {
            "50": "239, 246, 255",   # Azul muy claro
            "100": "219, 234, 254",  # Azul claro
            "200": "191, 219, 254",  # Azul suave
            "300": "147, 197, 253",  # Azul medio claro
            "400": "96, 165, 250",   # Azul vibrante
            "500": "59, 130, 246",   # Azul principal elegante
            "600": "37, 99, 235",    # Azul intenso
            "700": "29, 78, 216",    # Azul oscuro
            "800": "30, 64, 175",    # Azul muy oscuro
            "900": "30, 58, 138",    # Azul marino
            "950": "23, 37, 84",     # Azul marino profundo
        },
        "font": {
            "subtle-light": "var(--color-base-600)",      # Texto sutil en modo claro
            "subtle-dark": "var(--color-base-400)",       # Texto sutil en modo oscuro - más visible
            "default-light": "var(--color-base-800)",     # Texto por defecto en modo claro
            "default-dark": "var(--color-base-300)",      # Texto por defecto en modo oscuro - más contrastado
            "important-light": "var(--color-base-900)",   # Texto importante en modo claro
            "important-dark": "var(--color-base-200)",    # Texto importante en modo oscuro - menos claro
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": "Panel Principal",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Dashboard",
                        "icon": "dashboard",
                        "link": reverse_lazy("admin:index"),
                        "permission": lambda request: request.user.is_authenticated,
                    },
                    {
                        "title": "Balances",
                        "icon": "analytics",
                        "link": reverse_lazy("balances"),
                        "permission": lambda request: request.user.is_authenticated,
                    },
                ],
            },
            {
                "title": "Gestión de Gastos",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Bancos",
                        "icon": "account_balance",
                        "link": reverse_lazy("admin:gastos_banco_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_banco"),
                    },
                    {
                        "title": "Cuentas",
                        "icon": "credit_card",
                        "link": reverse_lazy("admin:gastos_cuenta_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_cuenta"),
                    },
                    {
                        "title": "Categorías de Gastos",
                        "icon": "category",
                        "link": reverse_lazy("admin:gastos_catgastos_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_catgastos"),
                    },
                    {
                        "title": "Gastos",
                        "icon": "receipt_long",
                        "link": reverse_lazy("admin:gastos_gastos_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_gastos"),
                    },
                    {
                        "title": "Subir Factura (IA)",
                        "icon": "document_scanner",
                        "link": reverse_lazy("gastos:ingresar_gasto_factura"),
                        "permission": lambda request: request.user.has_perm("gastos.add_gastos"),
                    },
                    {
                        "title": "Compras",
                        "icon": "shopping_cart",
                        "link": reverse_lazy("admin:gastos_compra_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_compra"),
                    },
                    {
                        "title": "Saldos Mensuales",
                        "icon": "trending_up",
                        "link": reverse_lazy("admin:gastos_saldomensual_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_saldomensual"),
                    },
                ],
            },
            {
                "title": "Gestión de Ventas",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Clientes",
                        "icon": "people",
                        "link": reverse_lazy("admin:ventas_cliente_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_cliente"),
                    },
                    {
                        "title": "Agentes",
                        "icon": "support_agent",
                        "link": reverse_lazy("admin:ventas_agente_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_agente"),
                    },
                    {
                        "title": "Ventas",
                        "icon": "point_of_sale",
                        "link": reverse_lazy("admin:ventas_ventas_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_ventas"),
                    },
                    {
                        "title": "Anticipos",
                        "icon": "payments",
                        "link": reverse_lazy("admin:ventas_anticipo_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_anticipo"),
                    },
                ],
            },
            {
                "title": "Catálogo",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Países",
                        "icon": "public",
                        "link": reverse_lazy("admin:catalogo_pais_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_pais"),
                    },
                    {
                        "title": "Estados",
                        "icon": "map",
                        "link": reverse_lazy("admin:catalogo_estado_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_estado"),
                    },
                    {
                        "title": "Sucursales",
                        "icon": "store",
                        "link": reverse_lazy("admin:catalogo_sucursal_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_sucursal"),
                    },
                    {
                        "title": "Productores",
                        "icon": "agriculture",
                        "link": reverse_lazy("admin:catalogo_productor_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_productor"),
                    },
                    {
                        "title": "Productos",
                        "icon": "inventory",
                        "link": reverse_lazy("admin:catalogo_producto_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_producto"),
                    },
                ],
            },
            {
                "title": "Administración",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Usuarios",
                        "icon": "person",
                        "link": reverse_lazy("admin:auth_user_changelist"),
                        "permission": lambda request: (
                            request.user.has_perm("auth.view_user") and 
                            request.user.groups.filter(name="Administrador").exists()
                        ),
                    },
                    {
                        "title": "Grupos",
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                        "permission": lambda request: (
                            request.user.has_perm("auth.view_group") and 
                            request.user.groups.filter(name="Administrador").exists()
                        ),
                    },
                    {
                        "title": "Registro de Actividad",
                        "icon": "history",
                        "link": reverse_lazy("admin:auditoria_logactividad_changelist"),
                        "permission": lambda request: (
                            request.user.has_perm("auditoria.view_logactividad") and 
                            request.user.groups.filter(name="Administrador").exists()
                        ),
                    },
                ],
            },
        ],
    },
    # CSS personalizado para mejorar la apariencia de los botones import/export y widgets de dinero
    "STYLES": [
        lambda request: static("css/custom.css"),
        lambda request: static("css/money_widget.css"),
    ],
    # JavaScript personalizado para reposicionar botones import/export y mejorar widgets de dinero
    "SCRIPTS": [
        lambda request: static("js/admin_import_export.js"),
        lambda request: static("js/money_widget.js"),
    ],
}

def environment_callback(request):
    """
    Callback para mostrar el entorno en la esquina superior derecha
    """
    if not DEBUG:
        return ["Producción", "danger"]
    return ["Desarrollo", "info"]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",  # Middleware para soporte multiidioma
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Middlewares de auditoría
    "auditoria.middleware.AuthAuditMiddleware",  # Registro de login/logout
    "auditoria.admin_middleware.AdminAuditMiddleware",  # Registro de actividad en admin
]

# Agregar middleware para servir archivos media en producción
if not DEBUG:
    MIDDLEWARE.insert(-2, "app.middleware.MediaServeMiddleware")  # Insertar antes de los middlewares de auditoría

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
          'ENGINE': 'django.db.backends.mysql',
          'NAME': os.getenv("DB_NAME"),
          'USER': os.getenv("DB_USER"),
          'PASSWORD': os.getenv("DB_PASSWORD"),
          'HOST': os.getenv("DB_HOST"),
          'PORT': os.getenv("DB_PORT"),
     }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "es"  # Idioma por defecto

TIME_ZONE = "America/Mexico_City"

USE_I18N = True  # Habilitar internacionalización para que Unfold use español

# Desactivamos el soporte de zona horaria para evitar errores con MySQL
USE_TZ = False

# Idiomas disponibles en la aplicación
LANGUAGES = [
    ('es', 'Español'),
]

# Directorio donde se almacenan los archivos de traducción
LOCALE_PATHS = [
    BASE_DIR / 'locale',
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'static-only')

STATICFILES_DIRS = (
    os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static'),
)

TEMPLATE_DIRS = (
    os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'templates'),
)

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Compressor settings
COMPRESS_ROOT = BASE_DIR / 'static'
COMPRESS_ENABLED = True

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]

# Configuración para servir archivos estáticos en producción
if not DEBUG:
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
    # Configuración adicional para archivos estáticos
    WHITENOISE_USE_FINDERS = True
    WHITENOISE_AUTOREFRESH = True
    # Configuración para servir archivos media con WhiteNoise en producción
    WHITENOISE_ROOT = MEDIA_ROOT
    # Añadir configuración para servir archivos media
    WHITENOISE_MEDIA_PREFIX = '/media/'

# Configuración de logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(BASE_DIR, 'logs', 'app.log'),
            'maxBytes': 1024*1024*15,  # 15MB
            'backupCount': 10,
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO' if not DEBUG else 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple' if DEBUG else 'verbose',
        },
    },
    'root': {
        'handlers': ['console', 'file'],
        'level': 'INFO',
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
        'app': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG' if DEBUG else 'INFO',
            'propagate': False,
        },
    },
}

# Configuración de cache para producción
if not DEBUG:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
            'LOCATION': 'unique-snowflake',
            'TIMEOUT': 300,
            'OPTIONS': {
                'MAX_ENTRIES': 1000,
            }
        }
    }
else:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
        }
    }

# ===============================
# CONFIGURACIÓN DJANGO MONEY
# ===============================

# Configuración por defecto de moneda
DEFAULT_CURRENCY = 'MXN'

# Lista de monedas soportadas (puedes agregar o quitar según tus necesidades)
CURRENCIES = ['MXN', 'USD', 'EUR', 'GBP', 'JPY', 'CAD', 'AUD', 'CHF', 'CNY', 'INR']

# Configuración adicional de django-money
CURRENCY_CHOICES = [
    ('MXN', 'Peso Mexicano (MXN)'),
    ('USD', 'Dólar Estadounidense (USD)'),
    ('EUR', 'Euro (EUR)'),
    ('GBP', 'Libra Esterlina (GBP)'),
    ('JPY', 'Yen Japonés (JPY)'),
    ('CAD', 'Dólar Canadiense (CAD)'),
    ('AUD', 'Dólar Australiano (AUD)'),
    ('CHF', 'Franco Suizo (CHF)'),
    ('CNY', 'Yuan Chino (CNY)'),
    ('INR', 'Rupia India (INR)'),
]

# Configuración de Exchange rates (conversiones automáticas)
OPEN_EXCHANGE_RATES_APP_ID = os.getenv('OPEN_EXCHANGE_RATES_APP_ID')
#FIXER_ACCESS_KEY = os.getenv('FIXER_ACCESS_KEY')

# Configuración de formato de moneda
USE_L10N = True
USE_THOUSAND_SEPARATOR = True

