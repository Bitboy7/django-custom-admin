"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

from import_export.formats.base_formats import *
from dotenv import load_dotenv
import os
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [os.getenv("DOMAIN")]

CRSF_TRUSTED_ORIGINS = [
    os.getenv("DOMAIN")
]

# Application definition

INSTALLED_APPS = [
    "unfold",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'django.contrib.humanize',
    'compressor',
    'app',  # Agregamos la app principal para los comandos de gestión
    'auditoria',  # Sistema de registro de actividad
    'catalogo.apps.CatalogoConfig',
    'gastos.apps.GastosConfig',
    'ventas.apps.VentasConfig',
    'import_export',
]

# Configuración completa para Django Unfold
UNFOLD = {
    "SITE_TITLE": "Agricola de la Costa - Sistema de Administración",
    "SITE_HEADER": "Agricola de la Costa",
    "SITE_SUBHEADER": "Sistema de Gestión Integral",
    "SITE_URL": "/admin/",
    "SITE_ICON": lambda request: static("img/icon.png"),
    "SITE_LOGO": lambda request: static("img/logo-sm.png"),
    "SITE_FAVICONS": [
        {
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/png",
            "href": lambda request: static("img/icon.png"),
        },
    ],
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "SHOW_BACK_BUTTON": True,
    "ENVIRONMENT": "app.environment_callback",
    "THEME": None,  # Permite cambio de tema
    "LOGIN": {
        "image": lambda request: static("img/login-bg.png") if static("img/login-bg.png") else None,
    },
    "COLORS": {
        "base": {
            "50": "248, 250, 252",   # Gris muy claro
            "100": "241, 245, 249",  # Gris claro
            "200": "226, 232, 240",  # Gris suave
            "300": "203, 213, 225",  # Gris medio claro
            "400": "148, 163, 184",  # Gris medio
            "500": "100, 116, 139",  # Gris equilibrado
            "600": "71, 85, 105",    # Gris oscuro medio
            "700": "51, 65, 85",     # Gris oscuro
            "800": "30, 41, 59",     # Gris muy oscuro
            "900": "15, 23, 42",     # Casi negro azulado
            "950": "2, 6, 23",       # Negro azulado profundo
        },
        "primary": {
            "50": "239, 246, 255",   # Azul muy claro
            "100": "219, 234, 254",  # Azul claro
            "200": "191, 219, 254",  # Azul suave
            "300": "147, 197, 253",  # Azul medio claro
            "400": "96, 165, 250",   # Azul vibrante
            "500": "59, 130, 246",   # Azul principal elegante
            "600": "37, 99, 235",    # Azul intenso
            "700": "29, 78, 216",    # Azul oscuro
            "800": "30, 64, 175",    # Azul muy oscuro
            "900": "30, 58, 138",    # Azul marino
            "950": "23, 37, 84",     # Azul marino profundo
        },
        "font": {
            "subtle-light": "var(--color-base-600)",      # Texto sutil en modo claro
            "subtle-dark": "var(--color-base-400)",       # Texto sutil en modo oscuro - más visible
            "default-light": "var(--color-base-800)",     # Texto por defecto en modo claro
            "default-dark": "var(--color-base-300)",      # Texto por defecto en modo oscuro - más contrastado
            "important-light": "var(--color-base-900)",   # Texto importante en modo claro
            "important-dark": "var(--color-base-200)",    # Texto importante en modo oscuro - menos claro
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": _("Panel Principal"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Dashboard"),
                        "icon": "dashboard",
                        "link": reverse_lazy("admin:index"),
                        "permission": lambda request: request.user.is_authenticated,
                    },
                    {
                        "title": _("Balances"),
                        "icon": "analytics",
                        "link": reverse_lazy("balances"),
                        "permission": lambda request: request.user.is_authenticated,
                    },
                ],
            },
            {
                "title": _("Gestión de Gastos"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Bancos"),
                        "icon": "account_balance",
                        "link": reverse_lazy("admin:gastos_banco_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_banco"),
                    },
                    {
                        "title": _("Cuentas"),
                        "icon": "credit_card",
                        "link": reverse_lazy("admin:gastos_cuenta_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_cuenta"),
                    },
                    {
                        "title": _("Categorías de Gastos"),
                        "icon": "category",
                        "link": reverse_lazy("admin:gastos_catgastos_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_catgastos"),
                    },
                    {
                        "title": _("Gastos"),
                        "icon": "receipt_long",
                        "link": reverse_lazy("admin:gastos_gastos_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_gastos"),
                    },
                    {
                        "title": _("Subir Factura (IA)"),
                        "icon": "document_scanner",
                        "link": reverse_lazy("gastos:ingresar_gasto_factura"),
                        "permission": lambda request: request.user.has_perm("gastos.add_gastos"),
                    },
                    {
                        "title": _("Compras"),
                        "icon": "shopping_cart",
                        "link": reverse_lazy("admin:gastos_compra_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_compra"),
                    },
                    {
                        "title": _("Saldos Mensuales"),
                        "icon": "trending_up",
                        "link": reverse_lazy("admin:gastos_saldomensual_changelist"),
                        "permission": lambda request: request.user.has_perm("gastos.view_saldomensual"),
                    },
                ],
            },
            {
                "title": _("Gestión de Ventas"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Clientes"),
                        "icon": "people",
                        "link": reverse_lazy("admin:ventas_cliente_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_cliente"),
                    },
                    {
                        "title": _("Agentes"),
                        "icon": "support_agent",
                        "link": reverse_lazy("admin:ventas_agente_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_agente"),
                    },
                    {
                        "title": _("Ventas"),
                        "icon": "point_of_sale",
                        "link": reverse_lazy("admin:ventas_ventas_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_ventas"),
                    },
                    {
                        "title": _("Anticipos"),
                        "icon": "payments",
                        "link": reverse_lazy("admin:ventas_anticipo_changelist"),
                        "permission": lambda request: request.user.has_perm("ventas.view_anticipo"),
                    },
                ],
            },
            {
                "title": _("Catálogo"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Países"),
                        "icon": "public",
                        "link": reverse_lazy("admin:catalogo_pais_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_pais"),
                    },
                    {
                        "title": _("Estados"),
                        "icon": "map",
                        "link": reverse_lazy("admin:catalogo_estado_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_estado"),
                    },
                    {
                        "title": _("Sucursales"),
                        "icon": "store",
                        "link": reverse_lazy("admin:catalogo_sucursal_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_sucursal"),
                    },
                    {
                        "title": _("Productores"),
                        "icon": "agriculture",
                        "link": reverse_lazy("admin:catalogo_productor_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_productor"),
                    },
                    {
                        "title": _("Productos"),
                        "icon": "inventory",
                        "link": reverse_lazy("admin:catalogo_producto_changelist"),
                        "permission": lambda request: request.user.has_perm("catalogo.view_producto"),
                    },
                ],
            },
            {
                "title": _("Administración"),
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": _("Usuarios"),
                        "icon": "person",
                        "link": reverse_lazy("admin:auth_user_changelist"),
                        "permission": lambda request: (
                            request.user.has_perm("auth.view_user") and 
                            request.user.groups.filter(name="Administrador").exists()
                        ),
                    },
                    {
                        "title": _("Grupos"),
                        "icon": "group",
                        "link": reverse_lazy("admin:auth_group_changelist"),
                        "permission": lambda request: (
                            request.user.has_perm("auth.view_group") and 
                            request.user.groups.filter(name="Administrador").exists()
                        ),
                    },
                    {
                        "title": _("Registro de Actividad"),
                        "icon": "history",
                        "link": reverse_lazy("admin:auditoria_logactividad_changelist"),
                        "permission": lambda request: (
                            request.user.has_perm("auditoria.view_logactividad") and 
                            request.user.groups.filter(name="Administrador").exists()
                        ),
                    },
                ],
            },
        ],
    },
    # CSS personalizado para mejorar la apariencia de los botones import/export
    "STYLES": [
        lambda request: static("css/custom.css"),
    ],
    # JavaScript personalizado para reposicionar botones import/export
    "SCRIPTS": [
        lambda request: static("js/admin_import_export.js"),
    ],
}

def environment_callback(request):
    """
    Callback para mostrar el entorno en la esquina superior derecha
    """
    if not DEBUG:
        return ["Producción", "danger"]
    return ["Desarrollo", "info"]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Middlewares de auditoría
    "auditoria.middleware.AuthAuditMiddleware",  # Registro de login/logout
    "auditoria.admin_middleware.AdminAuditMiddleware",  # Registro de actividad en admin
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
          'ENGINE': 'django.db.backends.mysql',
          'NAME': os.getenv("DB_NAME"),
          'USER': os.getenv("DB_USER"),
          'PASSWORD': os.getenv("DB_PASSWORD"),
          'HOST': os.getenv("DB_HOST"),
          'PORT': os.getenv("DB_PORT"),
     }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "es-ES"

TIME_ZONE = "America/Mexico_City"

USE_I18N = True

# Desactivamos el soporte de zona horaria para evitar errores con MySQL
USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "/static/"
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
STATIC_ROOT = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'static-only')

STATICFILES_DIRS = (
    os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static'),
)

TEMPLATE_DIRS = (
    os.path.join(os.path.dirname(os.path.dirname(__file__)), 'static', 'templates'),
)

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Compressor settings
COMPRESS_ROOT = BASE_DIR / 'static'

COMPRESS_ENABLED = True

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'compressor.finders.CompressorFinder',
]

