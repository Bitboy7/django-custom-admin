#!/bin/bash

# Entrypoint espec√≠fico para Railway.app
set -e

echo "üöÄ Iniciando configuraci√≥n para Railway..."

# Instalar dependencias si no est√°n instaladas
echo "üì¶ Verificando e instalando dependencias..."
pip install -r requirements.txt

# Esperar un poco para asegurar que todo est√© listo
echo "‚è≥ Esperando inicializaci√≥n..."
sleep 5

# Verificar la configuraci√≥n de Django
echo "üîç Verificando configuraci√≥n de Django..."
python manage.py check --deploy --settings=app.settings || echo "‚ö†Ô∏è Advertencias de configuraci√≥n detectadas, continuando..."

# Ejecutar migraciones de forma m√°s robusta
echo "üîÑ Ejecutando migraciones..."
python manage.py migrate --fake-initial || python manage.py migrate --run-syncdb || echo "‚ö†Ô∏è Error en migraciones, continuando..."

# Crear superusuario si no existe (de forma m√°s segura)
echo "üë§ Verificando superusuario..."
python manage.py shell -c "
import os
from django.contrib.auth import get_user_model
try:
    User = get_user_model()
    if not User.objects.filter(is_superuser=True).exists():
        print('Creando superusuario por defecto...')
        User.objects.create_superuser(
            os.environ.get('DJANGO_SUPERUSER_NAME'),
            os.environ.get('DJANGO_SUPERUSER_EMAIL'),
            os.environ.get('DJANGO_SUPERUSER_PASSWORD')
        )
        print(f'Superusuario creado: {os.environ.get(\"DJANGO_SUPERUSER_NAME\")}')
    else:
        print('Superusuario ya existe')
except Exception as e:
    print(f'Error al verificar/crear superusuario: {e}')
" || echo "‚ö†Ô∏è Error al configurar superusuario, continuando..."

# Configurar roles si no existen
echo "üîê Configurando roles del sistema..."
python manage.py setup_roles --create-roles || echo "Los roles ya est√°n configurados o hubo un error"

# Recopilar archivos est√°ticos
echo "üì¶ Recopilando archivos est√°ticos..."
python manage.py collectstatic --noinput --clear || echo "‚ö†Ô∏è Error al recopilar est√°ticos, continuando..."

# Crear directorios de media necesarios
echo "üìÅ Creando directorios de media..."
python manage.py shell -c "
import os
from django.conf import settings
try:
    media_dirs = [
        'bancos', 'catalogo', 'clientes', 'paises', 
        'productores', 'temp_documents', 'temp_invoices'
    ]
    for dir_name in media_dirs:
        dir_path = os.path.join(settings.MEDIA_ROOT, dir_name)
        os.makedirs(dir_path, exist_ok=True)
        print(f'Directorio creado: {dir_path}')
except Exception as e:
    print(f'Error al crear directorios: {e}')
" || echo "‚ö†Ô∏è Error al crear directorios de media"

echo "‚úÖ Configuraci√≥n completada"
echo "üéØ Iniciando servidor..."

# Obtener el puerto de Railway o usar 8000 por defecto
PORT=${PORT:-8000}

# Ejecutar Gunicorn con configuraci√≥n optimizada para Railway
exec gunicorn app.wsgi:application \
    --bind 0.0.0.0:$PORT \
    --workers 2 \
    --timeout 120 \
    --keep-alive 2 \
    --max-requests 1000 \
    --max-requests-jitter 100 \
    --access-logfile - \
    --error-logfile - \
    --log-level info